"use strict";
(self["webpackChunkappyter_js"] = self["webpackChunkappyter_js"] || []).push([["extras_file-field_URI_svelte"],{

/***/ "./components/fields/TextListField.svelte":
/*!************************************************!*\
  !*** ./components/fields/TextListField.svelte ***!
  \************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony import */ var svelte_internal__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! svelte/internal */ "./node_modules/svelte/internal/index.mjs");
/* harmony import */ var _utils_ensure_string_list__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/utils/ensure_string_list */ "./utils/ensure_string_list.js");
/* harmony import */ var _utils_re_full__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/utils/re_full */ "./utils/re_full.js");
/* harmony import */ var _Users_giacomomarino_appyter_js_node_modules_svelte_loader_lib_hot_api_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./node_modules/svelte-loader/lib/hot-api.js */ "./node_modules/svelte-loader/lib/hot-api.js");
/* harmony import */ var _Users_giacomomarino_appyter_js_node_modules_svelte_hmr_runtime_proxy_adapter_dom_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./node_modules/svelte-hmr/runtime/proxy-adapter-dom.js */ "./node_modules/svelte-hmr/runtime/proxy-adapter-dom.js");
/* module decorator */ module = __webpack_require__.hmd(module);
/* components/fields/TextListField.svelte generated by Svelte v3.46.4 */

const {
  Object: Object_1
} = svelte_internal__WEBPACK_IMPORTED_MODULE_0__.globals;


const file = "components/fields/TextListField.svelte";

function get_each_context(ctx, list, i) {
  const child_ctx = ctx.slice();
  child_ctx[5] = list[i];
  return child_ctx;
}

function get_each_context_1(ctx, list, i) {
  const child_ctx = ctx.slice();
  child_ctx[8] = list[i];
  return child_ctx;
} // (26:16) {#if args.description}


function create_if_block_2(ctx) {
  let sup;
  let i;
  let sup_title_value;
  const block = {
    c: function create() {
      sup = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.element)("sup");
      i = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.element)("i");
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(i, "class", "far fa-question-circle");
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.add_location)(i, file, 25, 92, 746);
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(sup, "data-toggle", "tooltip");
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(sup, "title", sup_title_value =
      /*args*/
      ctx[0].description);
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.add_location)(sup, file, 25, 38, 692);
    },
    m: function mount(target, anchor) {
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, sup, anchor);
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(sup, i);
    },
    p: function update(ctx, dirty) {
      if (dirty &
      /*args*/
      1 && sup_title_value !== (sup_title_value =
      /*args*/
      ctx[0].description)) {
        (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(sup, "title", sup_title_value);
      }
    },
    d: function destroy(detaching) {
      if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(sup);
    }
  };
  (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
    block,
    id: create_if_block_2.name,
    type: "if",
    source: "(26:16) {#if args.description}",
    ctx
  });
  return block;
} // (40:6) {#each invalid as el}


function create_each_block_1(ctx) {
  let t0;
  let t1_value =
  /*el*/
  ctx[8].index + "";
  let t1;
  let t2;
  let t3_value =
  /*el*/
  ctx[8].value + "";
  let t3;
  let t4;
  let br;
  const block = {
    c: function create() {
      t0 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.text)("Line ");
      t1 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.text)(t1_value);
      t2 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.text)(": ");
      t3 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.text)(t3_value);
      t4 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.text)(" contains unsupported characters");
      br = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.element)("br");
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.add_location)(br, file, 40, 67, 1269);
    },
    m: function mount(target, anchor) {
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, t0, anchor);
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, t1, anchor);
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, t2, anchor);
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, t3, anchor);
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, t4, anchor);
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, br, anchor);
    },
    p: function update(ctx, dirty) {
      if (dirty &
      /*invalid*/
      2 && t1_value !== (t1_value =
      /*el*/
      ctx[8].index + "")) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.set_data_dev)(t1, t1_value);
      if (dirty &
      /*invalid*/
      2 && t3_value !== (t3_value =
      /*el*/
      ctx[8].value + "")) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.set_data_dev)(t3, t3_value);
    },
    d: function destroy(detaching) {
      if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(t0);
      if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(t1);
      if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(t2);
      if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(t3);
      if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(t4);
      if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(br);
    }
  };
  (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
    block,
    id: create_each_block_1.name,
    type: "each",
    source: "(40:6) {#each invalid as el}",
    ctx
  });
  return block;
} // (45:4) {#if args.examples && Object.keys(args.examples).length > 0}


function create_if_block(ctx) {
  let div1;
  let span;
  let t0;
  let show_if = Object.keys(
  /*args*/
  ctx[0].examples).length > 1;
  let t1;
  let t2;
  let div0;
  let if_block = show_if && create_if_block_1(ctx);
  let each_value = Object.keys(
  /*args*/
  ctx[0].examples);
  (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.validate_each_argument)(each_value);
  let each_blocks = [];

  for (let i = 0; i < each_value.length; i += 1) {
    each_blocks[i] = create_each_block(get_each_context(ctx, each_value, i));
  }

  const block = {
    c: function create() {
      div1 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.element)("div");
      span = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.element)("span");
      t0 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.text)("Try example");
      if (if_block) if_block.c();
      t1 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.text)(":");
      t2 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.space)();
      div0 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.element)("div");

      for (let i = 0; i < each_blocks.length; i += 1) {
        each_blocks[i].c();
      }

      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(span, "class", "d-table-cell mr-1 my-1 p-1 text-right");
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.set_style)(span, "white-space", "nowrap");
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.add_location)(span, file, 46, 8, 1455);
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(div0, "class", "d-table-cell table-grow d-flex flex-wrap justify-content-start align-items-center");
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.add_location)(div0, file, 49, 8, 1632);
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(div1, "class", "d-table-row");
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.add_location)(div1, file, 45, 6, 1421);
    },
    m: function mount(target, anchor) {
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, div1, anchor);
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(div1, span);
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(span, t0);
      if (if_block) if_block.m(span, null);
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(span, t1);
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(div1, t2);
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(div1, div0);

      for (let i = 0; i < each_blocks.length; i += 1) {
        each_blocks[i].m(div0, null);
      }
    },
    p: function update(ctx, dirty) {
      if (dirty &
      /*args*/
      1) show_if = Object.keys(
      /*args*/
      ctx[0].examples).length > 1;

      if (show_if) {
        if (if_block) {} else {
          if_block = create_if_block_1(ctx);
          if_block.c();
          if_block.m(span, t1);
        }
      } else if (if_block) {
        if_block.d(1);
        if_block = null;
      }

      if (dirty &
      /*args, ensure_string_list, Object*/
      1) {
        each_value = Object.keys(
        /*args*/
        ctx[0].examples);
        (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.validate_each_argument)(each_value);
        let i;

        for (i = 0; i < each_value.length; i += 1) {
          const child_ctx = get_each_context(ctx, each_value, i);

          if (each_blocks[i]) {
            each_blocks[i].p(child_ctx, dirty);
          } else {
            each_blocks[i] = create_each_block(child_ctx);
            each_blocks[i].c();
            each_blocks[i].m(div0, null);
          }
        }

        for (; i < each_blocks.length; i += 1) {
          each_blocks[i].d(1);
        }

        each_blocks.length = each_value.length;
      }
    },
    d: function destroy(detaching) {
      if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(div1);
      if (if_block) if_block.d();
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.destroy_each)(each_blocks, detaching);
    }
  };
  (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
    block,
    id: create_if_block.name,
    type: "if",
    source: "(45:4) {#if args.examples && Object.keys(args.examples).length > 0}",
    ctx
  });
  return block;
} // (48:21) {#if Object.keys(args.examples).length > 1}


function create_if_block_1(ctx) {
  let t;
  const block = {
    c: function create() {
      t = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.text)("s");
    },
    m: function mount(target, anchor) {
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, t, anchor);
    },
    d: function destroy(detaching) {
      if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(t);
    }
  };
  (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
    block,
    id: create_if_block_1.name,
    type: "if",
    source: "(48:21) {#if Object.keys(args.examples).length > 1}",
    ctx
  });
  return block;
} // (51:10) {#each Object.keys(args.examples) as example_name}


function create_each_block(ctx) {
  let span;
  let button;
  let t0_value =
  /*example_name*/
  ctx[5] + "";
  let t0;
  let t1;
  let mounted;
  let dispose;

  function click_handler() {
    return (
      /*click_handler*/
      ctx[4](
      /*example_name*/
      ctx[5])
    );
  }

  const block = {
    c: function create() {
      span = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.element)("span");
      button = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.element)("button");
      t0 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.text)(t0_value);
      t1 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.space)();
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(button, "type", "button");
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(button, "class", "text-btn");
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.add_location)(button, file, 52, 14, 1875);
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(span, "class", "text-sm m-1 p-1");
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.set_style)(span, "white-space", "nowrap");
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.add_location)(span, file, 51, 12, 1801);
    },
    m: function mount(target, anchor) {
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, span, anchor);
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(span, button);
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(button, t0);
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(span, t1);

      if (!mounted) {
        dispose = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.listen_dev)(button, "click", click_handler, false, false, false);
        mounted = true;
      }
    },
    p: function update(new_ctx, dirty) {
      ctx = new_ctx;
      if (dirty &
      /*args*/
      1 && t0_value !== (t0_value =
      /*example_name*/
      ctx[5] + "")) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.set_data_dev)(t0, t0_value);
    },
    d: function destroy(detaching) {
      if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(span);
      mounted = false;
      dispose();
    }
  };
  (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
    block,
    id: create_each_block.name,
    type: "each",
    source: "(51:10) {#each Object.keys(args.examples) as example_name}",
    ctx
  });
  return block;
}

function create_fragment(ctx) {
  let div3;
  let div0;
  let t0_value =
  /*args*/
  ctx[0].label + "";
  let t0;
  let t1;
  let t2;
  let div2;
  let textarea;
  let textarea_name_value;
  let textarea_placeholder_value;
  let textarea_rows_value;
  let textarea_cols_value;
  let t3;
  let div1;
  let t4;
  let t5_value =
  /*args*/
  ctx[0].constraint + "";
  let t5;
  let t6;
  let t7;
  let show_if =
  /*args*/
  ctx[0].examples && Object.keys(
  /*args*/
  ctx[0].examples).length > 0;
  let mounted;
  let dispose;
  let if_block0 =
  /*args*/
  ctx[0].description && create_if_block_2(ctx);
  let each_value_1 =
  /*invalid*/
  ctx[1];
  (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.validate_each_argument)(each_value_1);
  let each_blocks = [];

  for (let i = 0; i < each_value_1.length; i += 1) {
    each_blocks[i] = create_each_block_1(get_each_context_1(ctx, each_value_1, i));
  }

  let if_block1 = show_if && create_if_block(ctx);
  const block = {
    c: function create() {
      div3 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.element)("div");
      div0 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.element)("div");
      t0 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.text)(t0_value);
      if (if_block0) if_block0.c();
      t1 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.text)(":");
      t2 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.space)();
      div2 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.element)("div");
      textarea = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.element)("textarea");
      t3 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.space)();
      div1 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.element)("div");

      for (let i = 0; i < each_blocks.length; i += 1) {
        each_blocks[i].c();
      }

      t4 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.text)("\n      Each line should match `");
      t5 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.text)(t5_value);
      t6 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.text)("`");
      t7 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.space)();
      if (if_block1) if_block1.c();
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(div0, "class", "col-lg-3 bold text-lg-right my-auto");
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.add_location)(div0, file, 24, 2, 604);
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(textarea, "name", textarea_name_value =
      /*args*/
      ctx[0].name);
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(textarea, "placeholder", textarea_placeholder_value =
      /*args*/
      ctx[0].hint);
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(textarea, "rows", textarea_rows_value =
      /*args*/
      ctx[0].rows);
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(textarea, "cols", textarea_cols_value =
      /*args*/
      ctx[0].cols);
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(textarea, "class", "form-control nodecoration tiny");
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.toggle_class)(textarea, "is-valid",
      /*invalid*/
      ctx[1].length === 0);
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.toggle_class)(textarea, "is-invalid",
      /*invalid*/
      ctx[1].length !== 0);
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.add_location)(textarea, file, 28, 4, 848);
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(div1, "class", "invalid-feedback");
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.add_location)(div1, file, 38, 4, 1143);
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(div2, "class", "col-lg-6 pt-2 pt-lg-0");
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.add_location)(div2, file, 27, 2, 808);
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(div3, "class", "row px-4 px-lg-3 pb-4");
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.add_location)(div3, file, 23, 0, 566);
    },
    l: function claim(nodes) {
      throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
    },
    m: function mount(target, anchor) {
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, div3, anchor);
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(div3, div0);
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(div0, t0);
      if (if_block0) if_block0.m(div0, null);
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(div0, t1);
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(div3, t2);
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(div3, div2);
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(div2, textarea);
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.set_input_value)(textarea,
      /*args*/
      ctx[0].value);
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(div2, t3);
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(div2, div1);

      for (let i = 0; i < each_blocks.length; i += 1) {
        each_blocks[i].m(div1, null);
      }

      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(div1, t4);
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(div1, t5);
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(div1, t6);
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(div2, t7);
      if (if_block1) if_block1.m(div2, null);

      if (!mounted) {
        dispose = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.listen_dev)(textarea, "input",
        /*textarea_input_handler*/
        ctx[3]);
        mounted = true;
      }
    },
    p: function update(ctx, [dirty]) {
      if (dirty &
      /*args*/
      1 && t0_value !== (t0_value =
      /*args*/
      ctx[0].label + "")) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.set_data_dev)(t0, t0_value);

      if (
      /*args*/
      ctx[0].description) {
        if (if_block0) {
          if_block0.p(ctx, dirty);
        } else {
          if_block0 = create_if_block_2(ctx);
          if_block0.c();
          if_block0.m(div0, t1);
        }
      } else if (if_block0) {
        if_block0.d(1);
        if_block0 = null;
      }

      if (dirty &
      /*args*/
      1 && textarea_name_value !== (textarea_name_value =
      /*args*/
      ctx[0].name)) {
        (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(textarea, "name", textarea_name_value);
      }

      if (dirty &
      /*args*/
      1 && textarea_placeholder_value !== (textarea_placeholder_value =
      /*args*/
      ctx[0].hint)) {
        (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(textarea, "placeholder", textarea_placeholder_value);
      }

      if (dirty &
      /*args*/
      1 && textarea_rows_value !== (textarea_rows_value =
      /*args*/
      ctx[0].rows)) {
        (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(textarea, "rows", textarea_rows_value);
      }

      if (dirty &
      /*args*/
      1 && textarea_cols_value !== (textarea_cols_value =
      /*args*/
      ctx[0].cols)) {
        (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(textarea, "cols", textarea_cols_value);
      }

      if (dirty &
      /*args*/
      1) {
        (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.set_input_value)(textarea,
        /*args*/
        ctx[0].value);
      }

      if (dirty &
      /*invalid*/
      2) {
        (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.toggle_class)(textarea, "is-valid",
        /*invalid*/
        ctx[1].length === 0);
      }

      if (dirty &
      /*invalid*/
      2) {
        (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.toggle_class)(textarea, "is-invalid",
        /*invalid*/
        ctx[1].length !== 0);
      }

      if (dirty &
      /*invalid*/
      2) {
        each_value_1 =
        /*invalid*/
        ctx[1];
        (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.validate_each_argument)(each_value_1);
        let i;

        for (i = 0; i < each_value_1.length; i += 1) {
          const child_ctx = get_each_context_1(ctx, each_value_1, i);

          if (each_blocks[i]) {
            each_blocks[i].p(child_ctx, dirty);
          } else {
            each_blocks[i] = create_each_block_1(child_ctx);
            each_blocks[i].c();
            each_blocks[i].m(div1, t4);
          }
        }

        for (; i < each_blocks.length; i += 1) {
          each_blocks[i].d(1);
        }

        each_blocks.length = each_value_1.length;
      }

      if (dirty &
      /*args*/
      1 && t5_value !== (t5_value =
      /*args*/
      ctx[0].constraint + "")) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.set_data_dev)(t5, t5_value);
      if (dirty &
      /*args*/
      1) show_if =
      /*args*/
      ctx[0].examples && Object.keys(
      /*args*/
      ctx[0].examples).length > 0;

      if (show_if) {
        if (if_block1) {
          if_block1.p(ctx, dirty);
        } else {
          if_block1 = create_if_block(ctx);
          if_block1.c();
          if_block1.m(div2, null);
        }
      } else if (if_block1) {
        if_block1.d(1);
        if_block1 = null;
      }
    },
    i: svelte_internal__WEBPACK_IMPORTED_MODULE_0__.noop,
    o: svelte_internal__WEBPACK_IMPORTED_MODULE_0__.noop,
    d: function destroy(detaching) {
      if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(div3);
      if (if_block0) if_block0.d();
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.destroy_each)(each_blocks, detaching);
      if (if_block1) if_block1.d();
      mounted = false;
      dispose();
    }
  };
  (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
    block,
    id: create_fragment.name,
    type: "component",
    source: "",
    ctx
  });
  return block;
}

function instance($$self, $$props, $$invalidate) {
  let {
    $$slots: slots = {},
    $$scope
  } = $$props;
  (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.validate_slots)('TextListField', slots, []);
  let {
    args = {}
  } = $$props;
  let constraint;
  let invalid = [];
  const writable_props = ['args'];
  Object_1.keys($$props).forEach(key => {
    if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console.warn(`<TextListField> was created with unknown prop '${key}'`);
  });

  function textarea_input_handler() {
    args.value = this.value;
    $$invalidate(0, args);
  }

  const click_handler = example_name => $$invalidate(0, args.value = (0,_utils_ensure_string_list__WEBPACK_IMPORTED_MODULE_1__["default"])(args.examples[example_name]).join('\n'), args);

  $$self.$$set = $$props => {
    if ('args' in $$props) $$invalidate(0, args = $$props.args);
  };

  $$self.$capture_state = () => ({
    ensure_string_list: _utils_ensure_string_list__WEBPACK_IMPORTED_MODULE_1__["default"],
    re_full: _utils_re_full__WEBPACK_IMPORTED_MODULE_2__["default"],
    args,
    constraint,
    invalid
  });

  $$self.$inject_state = $$props => {
    if ('args' in $$props) $$invalidate(0, args = $$props.args);
    if ('constraint' in $$props) $$invalidate(2, constraint = $$props.constraint);
    if ('invalid' in $$props) $$invalidate(1, invalid = $$props.invalid);
  };

  if ($$props && "$$inject" in $$props) {
    $$self.$inject_state($$props.$$inject);
  }

  $$self.$$.update = () => {
    if ($$self.$$.dirty &
    /*args*/
    1) {
      $: if (args !== undefined && args.value === undefined) {
        $$invalidate(0, args.value = args.default, args);
      }
    }

    if ($$self.$$.dirty &
    /*args*/
    1) {
      $: if (args !== undefined) {
        $$invalidate(2, constraint = (0,_utils_re_full__WEBPACK_IMPORTED_MODULE_2__["default"])(args.constraint));
      }
    }

    if ($$self.$$.dirty &
    /*args, constraint*/
    5) {
      $: if (args.value !== undefined && constraint !== undefined) {
        $$invalidate(1, invalid = (0,_utils_ensure_string_list__WEBPACK_IMPORTED_MODULE_1__["default"])(args.value).filter(v => constraint.exec(v) === null).map((value, index) => ({
          value,
          index
        })));
      }
    }
  };

  return [args, invalid, constraint, textarea_input_handler, click_handler];
}

class TextListField extends svelte_internal__WEBPACK_IMPORTED_MODULE_0__.SvelteComponentDev {
  constructor(options) {
    super(options);
    (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.init)(this, options, instance, create_fragment, svelte_internal__WEBPACK_IMPORTED_MODULE_0__.safe_not_equal, {
      args: 0
    });
    (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterComponent", {
      component: this,
      tagName: "TextListField",
      options,
      id: create_fragment.name
    });
  }

  get args() {
    throw new Error("<TextListField>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }

  set args(value) {
    throw new Error("<TextListField>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }

}




if (module && module.hot) {}

/* harmony default export */ __webpack_exports__["default"] = (TextListField);

/***/ }),

/***/ "./extras/file-field/URI.svelte":
/*!**************************************!*\
  !*** ./extras/file-field/URI.svelte ***!
  \**************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony import */ var svelte_internal__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! svelte/internal */ "./node_modules/svelte/internal/index.mjs");
/* harmony import */ var _components_Lazy_svelte__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/components/Lazy.svelte */ "./components/Lazy.svelte");
/* harmony import */ var _components_fields_StringField_svelte__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/components/fields/StringField.svelte */ "./components/fields/StringField.svelte");
/* harmony import */ var _components_fields_TextListField_svelte__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/components/fields/TextListField.svelte */ "./components/fields/TextListField.svelte");
/* harmony import */ var _utils_ensure_string_list__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @/utils/ensure_string_list */ "./utils/ensure_string_list.js");
/* harmony import */ var _Users_giacomomarino_appyter_js_node_modules_svelte_loader_lib_hot_api_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./node_modules/svelte-loader/lib/hot-api.js */ "./node_modules/svelte-loader/lib/hot-api.js");
/* harmony import */ var _Users_giacomomarino_appyter_js_node_modules_svelte_hmr_runtime_proxy_adapter_dom_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./node_modules/svelte-hmr/runtime/proxy-adapter-dom.js */ "./node_modules/svelte-hmr/runtime/proxy-adapter-dom.js");
/* module decorator */ module = __webpack_require__.hmd(module);
/* extras/file-field/URI.svelte generated by Svelte v3.46.4 */





const file = "extras/file-field/URI.svelte"; // (18:0) <Lazy   module={() => import('@/components/fields/DescriptionField.svelte')}   children >

function create_default_slot(ctx) {
  let div;
  let t0_value =
  /*args*/
  ctx[0].filename + "";
  let t0;
  let t1;
  let span;
  let t3;
  const block = {
    c: function create() {
      div = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.element)("div");
      t0 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.text)(t0_value);
      t1 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.space)();
      span = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.element)("span");
      span.textContent = "URI Passthrough";
      t3 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.text)(": A uniform resource identifier (URI) allows you to pass the file through a number of different URI protocols. Supported protocols include: drs (GA4GH), s3, gs, ftp, http, & https");
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(div, "class", "bold my-auto mb-2");
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.set_style)(div, "font-weight", "500");
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.set_style)(div, "font-size", "medium", 1);
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.add_location)(div, file, 21, 0, 828);
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.set_style)(span, "font-weight", "500");
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.add_location)(span, file, 27, 2, 942);
    },
    m: function mount(target, anchor) {
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, div, anchor);
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(div, t0);
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, t1, anchor);
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, span, anchor);
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, t3, anchor);
    },
    p: function update(ctx, dirty) {
      if (dirty &
      /*args*/
      1 && t0_value !== (t0_value =
      /*args*/
      ctx[0].filename + "")) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.set_data_dev)(t0, t0_value);
    },
    d: function destroy(detaching) {
      if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(div);
      if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(t1);
      if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(span);
      if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(t3);
    }
  };
  (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
    block,
    id: create_default_slot.name,
    type: "slot",
    source: "(18:0) <Lazy   module={() => import('@/components/fields/DescriptionField.svelte')}   children >",
    ctx
  });
  return block;
} // (33:0) {:else}


function create_else_block(ctx) {
  let stringfield;
  let updating_args;
  let current;

  function stringfield_args_binding(value) {
    /*stringfield_args_binding*/
    ctx[3](value);
  }

  let stringfield_props = {};

  if (
  /*stringArgs*/
  ctx[1] !== void 0) {
    stringfield_props.args =
    /*stringArgs*/
    ctx[1];
  }

  stringfield = new _components_fields_StringField_svelte__WEBPACK_IMPORTED_MODULE_2__["default"]({
    props: stringfield_props,
    $$inline: true
  });
  svelte_internal__WEBPACK_IMPORTED_MODULE_0__.binding_callbacks.push(() => (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.bind)(stringfield, 'args', stringfield_args_binding));
  const block = {
    c: function create() {
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.create_component)(stringfield.$$.fragment);
    },
    m: function mount(target, anchor) {
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.mount_component)(stringfield, target, anchor);
      current = true;
    },
    p: function update(ctx, dirty) {
      const stringfield_changes = {};

      if (!updating_args && dirty &
      /*stringArgs*/
      2) {
        updating_args = true;
        stringfield_changes.args =
        /*stringArgs*/
        ctx[1];
        (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.add_flush_callback)(() => updating_args = false);
      }

      stringfield.$set(stringfield_changes);
    },
    i: function intro(local) {
      if (current) return;
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(stringfield.$$.fragment, local);
      current = true;
    },
    o: function outro(local) {
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(stringfield.$$.fragment, local);
      current = false;
    },
    d: function destroy(detaching) {
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.destroy_component)(stringfield, detaching);
    }
  };
  (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
    block,
    id: create_else_block.name,
    type: "else",
    source: "(33:0) {:else}",
    ctx
  });
  return block;
} // (31:0) {#if args.multiple}


function create_if_block(ctx) {
  let textlistfield;
  let updating_args;
  let current;

  function textlistfield_args_binding(value) {
    /*textlistfield_args_binding*/
    ctx[2](value);
  }

  let textlistfield_props = {};

  if (
  /*stringArgs*/
  ctx[1] !== void 0) {
    textlistfield_props.args =
    /*stringArgs*/
    ctx[1];
  }

  textlistfield = new _components_fields_TextListField_svelte__WEBPACK_IMPORTED_MODULE_3__["default"]({
    props: textlistfield_props,
    $$inline: true
  });
  svelte_internal__WEBPACK_IMPORTED_MODULE_0__.binding_callbacks.push(() => (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.bind)(textlistfield, 'args', textlistfield_args_binding));
  const block = {
    c: function create() {
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.create_component)(textlistfield.$$.fragment);
    },
    m: function mount(target, anchor) {
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.mount_component)(textlistfield, target, anchor);
      current = true;
    },
    p: function update(ctx, dirty) {
      const textlistfield_changes = {};

      if (!updating_args && dirty &
      /*stringArgs*/
      2) {
        updating_args = true;
        textlistfield_changes.args =
        /*stringArgs*/
        ctx[1];
        (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.add_flush_callback)(() => updating_args = false);
      }

      textlistfield.$set(textlistfield_changes);
    },
    i: function intro(local) {
      if (current) return;
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(textlistfield.$$.fragment, local);
      current = true;
    },
    o: function outro(local) {
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(textlistfield.$$.fragment, local);
      current = false;
    },
    d: function destroy(detaching) {
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.destroy_component)(textlistfield, detaching);
    }
  };
  (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
    block,
    id: create_if_block.name,
    type: "if",
    source: "(31:0) {#if args.multiple}",
    ctx
  });
  return block;
}

function create_fragment(ctx) {
  let lazy;
  let t0;
  let current_block_type_index;
  let if_block;
  let t1;
  let textarea;
  let textarea_name_value;
  let textarea_value_value;
  let current;
  lazy = new _components_Lazy_svelte__WEBPACK_IMPORTED_MODULE_1__["default"]({
    props: {
      module: func,
      children: true,
      $$slots: {
        default: [create_default_slot]
      },
      $$scope: {
        ctx
      }
    },
    $$inline: true
  });
  const if_block_creators = [create_if_block, create_else_block];
  const if_blocks = [];

  function select_block_type(ctx, dirty) {
    if (
    /*args*/
    ctx[0].multiple) return 0;
    return 1;
  }

  current_block_type_index = select_block_type(ctx, -1);
  if_block = if_blocks[current_block_type_index] = if_block_creators[current_block_type_index](ctx);
  const block = {
    c: function create() {
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.create_component)(lazy.$$.fragment);
      t0 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.space)();
      if_block.c();
      t1 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.space)();
      textarea = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.element)("textarea");
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(textarea, "type", "text");
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(textarea, "class", "hidden");
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(textarea, "name", textarea_name_value =
      /*args*/
      ctx[0].name);
      textarea.value = textarea_value_value =
      /*args*/
      ctx[0].value;
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.add_location)(textarea, file, 36, 0, 1303);
    },
    l: function claim(nodes) {
      throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
    },
    m: function mount(target, anchor) {
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.mount_component)(lazy, target, anchor);
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, t0, anchor);
      if_blocks[current_block_type_index].m(target, anchor);
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, t1, anchor);
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, textarea, anchor);
      current = true;
    },
    p: function update(ctx, [dirty]) {
      const lazy_changes = {};

      if (dirty &
      /*$$scope, args*/
      33) {
        lazy_changes.$$scope = {
          dirty,
          ctx
        };
      }

      lazy.$set(lazy_changes);
      let previous_block_index = current_block_type_index;
      current_block_type_index = select_block_type(ctx, dirty);

      if (current_block_type_index === previous_block_index) {
        if_blocks[current_block_type_index].p(ctx, dirty);
      } else {
        (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.group_outros)();
        (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(if_blocks[previous_block_index], 1, 1, () => {
          if_blocks[previous_block_index] = null;
        });
        (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.check_outros)();
        if_block = if_blocks[current_block_type_index];

        if (!if_block) {
          if_block = if_blocks[current_block_type_index] = if_block_creators[current_block_type_index](ctx);
          if_block.c();
        } else {
          if_block.p(ctx, dirty);
        }

        (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(if_block, 1);
        if_block.m(t1.parentNode, t1);
      }

      if (!current || dirty &
      /*args*/
      1 && textarea_name_value !== (textarea_name_value =
      /*args*/
      ctx[0].name)) {
        (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(textarea, "name", textarea_name_value);
      }

      if (!current || dirty &
      /*args*/
      1 && textarea_value_value !== (textarea_value_value =
      /*args*/
      ctx[0].value)) {
        (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.prop_dev)(textarea, "value", textarea_value_value);
      }
    },
    i: function intro(local) {
      if (current) return;
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(lazy.$$.fragment, local);
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_in)(if_block);
      current = true;
    },
    o: function outro(local) {
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(lazy.$$.fragment, local);
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.transition_out)(if_block);
      current = false;
    },
    d: function destroy(detaching) {
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.destroy_component)(lazy, detaching);
      if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(t0);
      if_blocks[current_block_type_index].d(detaching);
      if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(t1);
      if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(textarea);
    }
  };
  (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
    block,
    id: create_fragment.name,
    type: "component",
    source: "",
    ctx
  });
  return block;
}

const func = () => __webpack_require__.e(/*! import() */ "components_fields_DescriptionField_svelte").then(__webpack_require__.bind(__webpack_require__, /*! @/components/fields/DescriptionField.svelte */ "./components/fields/DescriptionField.svelte"));

function instance($$self, $$props, $$invalidate) {
  let {
    $$slots: slots = {},
    $$scope
  } = $$props;
  (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.validate_slots)('URI', slots, []);
  let {
    args
  } = $$props;
  let {
    name: _,
    ...stringArgs
  } = { ...args,
    description: 'One of several supported identifiers for accessing your file',
    hint: 'e.g. drs://yourhost.com/yourid...',
    constraint: '^(drs|s3|gs|ftp|http|https)://.+$',
    feedback: 'Supported protocols include: drs (GA4GH), s3, gs, ftp, http, & https'
  };
  const writable_props = ['args'];
  Object.keys($$props).forEach(key => {
    if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console.warn(`<URI> was created with unknown prop '${key}'`);
  });

  function textlistfield_args_binding(value) {
    stringArgs = value;
    $$invalidate(1, stringArgs);
  }

  function stringfield_args_binding(value) {
    stringArgs = value;
    $$invalidate(1, stringArgs);
  }

  $$self.$$set = $$props => {
    if ('args' in $$props) $$invalidate(0, args = $$props.args);
  };

  $$self.$capture_state = () => ({
    Lazy: _components_Lazy_svelte__WEBPACK_IMPORTED_MODULE_1__["default"],
    StringField: _components_fields_StringField_svelte__WEBPACK_IMPORTED_MODULE_2__["default"],
    TextListField: _components_fields_TextListField_svelte__WEBPACK_IMPORTED_MODULE_3__["default"],
    ensure_string_list: _utils_ensure_string_list__WEBPACK_IMPORTED_MODULE_4__["default"],
    args,
    _,
    stringArgs
  });

  $$self.$inject_state = $$props => {
    if ('args' in $$props) $$invalidate(0, args = $$props.args);
    if ('_' in $$props) _ = $$props._;
    if ('stringArgs' in $$props) $$invalidate(1, stringArgs = $$props.stringArgs);
  };

  if ($$props && "$$inject" in $$props) {
    $$self.$inject_state($$props.$$inject);
  }

  $$self.$$.update = () => {
    if ($$self.$$.dirty &
    /*stringArgs*/
    2) {
      $: $$invalidate(0, args.value = (0,_utils_ensure_string_list__WEBPACK_IMPORTED_MODULE_4__["default"])(stringArgs.value).map(value => value.replace(/^(.+)\/([#\?]+)(.*)$/g, '$1/$2#$2')).join('\n'), args);
    }
  };

  return [args, stringArgs, textlistfield_args_binding, stringfield_args_binding];
}

class URI extends svelte_internal__WEBPACK_IMPORTED_MODULE_0__.SvelteComponentDev {
  constructor(options) {
    super(options);
    (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.init)(this, options, instance, create_fragment, svelte_internal__WEBPACK_IMPORTED_MODULE_0__.safe_not_equal, {
      args: 0
    });
    (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterComponent", {
      component: this,
      tagName: "URI",
      options,
      id: create_fragment.name
    });
    const {
      ctx
    } = this.$$;
    const props = options.props || {};

    if (
    /*args*/
    ctx[0] === undefined && !('args' in props)) {
      console.warn("<URI> was created without expected prop 'args'");
    }
  }

  get args() {
    throw new Error("<URI>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }

  set args(value) {
    throw new Error("<URI>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }

}




if (module && module.hot) {}

/* harmony default export */ __webpack_exports__["default"] = (URI);

/***/ }),

/***/ "./utils/ensure_string_list.js":
/*!*************************************!*\
  !*** ./utils/ensure_string_list.js ***!
  \*************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": function() { return /* binding */ ensure_string_list; }
/* harmony export */ });
function ensure_string_list(v) {
  if (v === undefined || v === null) {
    return [];
  } else if (typeof v === 'object' && Array.isArray(v)) {
    return v;
  } else if (typeof v === 'string') {
    return v.split('\n').filter(s => s.replace(/^\s+$/, ''));
  } else {
    throw new Error('Unrecognized type');
  }
}

/***/ })

}]);
//# sourceMappingURL=extras_file-field_URI_svelte.js.map