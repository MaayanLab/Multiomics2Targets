"use strict";
(self["webpackChunkappyter_js"] = self["webpackChunkappyter_js"] || []).push([["extras_file-field_Upload_svelte"],{

/***/ "./extras/file-field/Upload.svelte":
/*!*****************************************!*\
  !*** ./extras/file-field/Upload.svelte ***!
  \*****************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony import */ var svelte_internal__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! svelte/internal */ "./node_modules/svelte/internal/index.mjs");
/* harmony import */ var _lib_stores_keycloak_auth_store__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/stores/keycloak_auth_store */ "./lib/stores/keycloak_auth_store.js");
/* harmony import */ var svelte__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! svelte */ "./node_modules/svelte/index.mjs");
/* harmony import */ var _Users_giacomomarino_appyter_js_node_modules_svelte_loader_lib_hot_api_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./node_modules/svelte-loader/lib/hot-api.js */ "./node_modules/svelte-loader/lib/hot-api.js");
/* harmony import */ var _Users_giacomomarino_appyter_js_node_modules_svelte_hmr_runtime_proxy_adapter_dom_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./node_modules/svelte-hmr/runtime/proxy-adapter-dom.js */ "./node_modules/svelte-hmr/runtime/proxy-adapter-dom.js");
/* module decorator */ module = __webpack_require__.hmd(module);
/* extras/file-field/Upload.svelte generated by Svelte v3.46.4 */

const {
  Error: Error_1,
  Object: Object_1,
  console: console_1
} = svelte_internal__WEBPACK_IMPORTED_MODULE_0__.globals;


const file = "extras/file-field/Upload.svelte";

function add_css(target) {
  (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_styles)(target, "svelte-7t3aq4", ".progress.svelte-7t3aq4{height:25px;width:100%;background-color:grey}.progress-bar.svelte-7t3aq4{height:100%;background-color:blue}.progress-bar.bg-success.svelte-7t3aq4{height:100%;background-color:green}\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */");
}

function get_each_context(ctx, list, i) {
  const child_ctx = ctx.slice();
  child_ctx[12] = list[i];
  return child_ctx;
}

function get_each_context_1(ctx, list, i) {
  const child_ctx = ctx.slice();
  child_ctx[15] = list[i];
  return child_ctx;
} // (197:8) {#if state[id].bg === 'error'}


function create_if_block_4(ctx) {
  let div;
  let t0;
  let t1;
  let if_block0 =
  /*state*/
  ctx[1][
  /*id*/
  ctx[15]].error && create_if_block_6(ctx);
  let if_block1 =
  /*state*/
  ctx[1][
  /*id*/
  ctx[15]].url && create_if_block_5(ctx);
  const block = {
    c: function create() {
      div = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.element)("div");
      t0 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.text)("Error loading file");
      if (if_block0) if_block0.c();
      t1 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.space)();
      if (if_block1) if_block1.c();
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(div, "class", "alert alert-danger");
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.add_location)(div, file, 197, 10, 5039);
    },
    m: function mount(target, anchor) {
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, div, anchor);
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(div, t0);
      if (if_block0) if_block0.m(div, null);
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(div, t1);
      if (if_block1) if_block1.m(div, null);
    },
    p: function update(ctx, dirty) {
      if (
      /*state*/
      ctx[1][
      /*id*/
      ctx[15]].error) {
        if (if_block0) {
          if_block0.p(ctx, dirty);
        } else {
          if_block0 = create_if_block_6(ctx);
          if_block0.c();
          if_block0.m(div, t1);
        }
      } else if (if_block0) {
        if_block0.d(1);
        if_block0 = null;
      }

      if (
      /*state*/
      ctx[1][
      /*id*/
      ctx[15]].url) {
        if (if_block1) {
          if_block1.p(ctx, dirty);
        } else {
          if_block1 = create_if_block_5(ctx);
          if_block1.c();
          if_block1.m(div, null);
        }
      } else if (if_block1) {
        if_block1.d(1);
        if_block1 = null;
      }
    },
    d: function destroy(detaching) {
      if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(div);
      if (if_block0) if_block0.d();
      if (if_block1) if_block1.d();
    }
  };
  (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
    block,
    id: create_if_block_4.name,
    type: "if",
    source: "(197:8) {#if state[id].bg === 'error'}",
    ctx
  });
  return block;
} // (199:30) {#if state[id].error}


function create_if_block_6(ctx) {
  let t0;
  let t1_value =
  /*state*/
  ctx[1][
  /*id*/
  ctx[15]].error + "";
  let t1;
  const block = {
    c: function create() {
      t0 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.text)(": ");
      t1 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.text)(t1_value);
    },
    m: function mount(target, anchor) {
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, t0, anchor);
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, t1, anchor);
    },
    p: function update(ctx, dirty) {
      if (dirty &
      /*state*/
      2 && t1_value !== (t1_value =
      /*state*/
      ctx[1][
      /*id*/
      ctx[15]].error + "")) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.set_data_dev)(t1, t1_value);
    },
    d: function destroy(detaching) {
      if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(t0);
      if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(t1);
    }
  };
  (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
    block,
    id: create_if_block_6.name,
    type: "if",
    source: "(199:30) {#if state[id].error}",
    ctx
  });
  return block;
} // (200:12) {#if state[id].url}


function create_if_block_5(ctx) {
  let t0;
  let a;
  let t1_value =
  /*state*/
  ctx[1][
  /*id*/
  ctx[15]].url + "";
  let t1;
  let a_href_value;
  const block = {
    c: function create() {
      t0 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.text)("from ");
      a = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.element)("a");
      t1 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.text)(t1_value);
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(a, "href", a_href_value =
      /*state*/
      ctx[1][
      /*id*/
      ctx[15]].url);
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(a, "target", "_blank");
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.add_location)(a, file, 199, 36, 5184);
    },
    m: function mount(target, anchor) {
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, t0, anchor);
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, a, anchor);
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(a, t1);
    },
    p: function update(ctx, dirty) {
      if (dirty &
      /*state*/
      2 && t1_value !== (t1_value =
      /*state*/
      ctx[1][
      /*id*/
      ctx[15]].url + "")) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.set_data_dev)(t1, t1_value);

      if (dirty &
      /*state*/
      2 && a_href_value !== (a_href_value =
      /*state*/
      ctx[1][
      /*id*/
      ctx[15]].url)) {
        (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(a, "href", a_href_value);
      }
    },
    d: function destroy(detaching) {
      if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(t0);
      if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(a);
    }
  };
  (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
    block,
    id: create_if_block_5.name,
    type: "if",
    source: "(200:12) {#if state[id].url}",
    ctx
  });
  return block;
} // (203:8) {#if state[id].bg === 'warning'}


function create_if_block_2(ctx) {
  let div;
  let t0;
  let br;
  let t1;
  let b;
  let t3;
  let a;
  let t4_value =
  /*state*/
  ctx[1][
  /*id*/
  ctx[15]].url + "";
  let t4;
  let a_href_value;
  let t5;
  let if_block =
  /*state*/
  ctx[1][
  /*id*/
  ctx[15]].error && create_if_block_3(ctx);
  const block = {
    c: function create() {
      div = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.element)("div");
      t0 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.text)("Error loading file");
      if (if_block) if_block.c();
      br = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.element)("br");
      t1 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.space)();
      b = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.element)("b");
      b.textContent = "It may require user engagement";
      t3 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.text)(", please visit\n              ");
      a = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.element)("a");
      t4 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.text)(t4_value);
      t5 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.text)("\n            to download the example file for upload.");
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.add_location)(br, file, 204, 75, 5438);
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.add_location)(b, file, 205, 12, 5457);
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(a, "href", a_href_value =
      /*state*/
      ctx[1][
      /*id*/
      ctx[15]].url);
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(a, "target", "_blank");
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.add_location)(a, file, 206, 14, 5523);
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(div, "class", "alert alert-warning");
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.add_location)(div, file, 203, 10, 5329);
    },
    m: function mount(target, anchor) {
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, div, anchor);
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(div, t0);
      if (if_block) if_block.m(div, null);
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(div, br);
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(div, t1);
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(div, b);
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(div, t3);
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(div, a);
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(a, t4);
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(div, t5);
    },
    p: function update(ctx, dirty) {
      if (
      /*state*/
      ctx[1][
      /*id*/
      ctx[15]].error) {
        if (if_block) {
          if_block.p(ctx, dirty);
        } else {
          if_block = create_if_block_3(ctx);
          if_block.c();
          if_block.m(div, br);
        }
      } else if (if_block) {
        if_block.d(1);
        if_block = null;
      }

      if (dirty &
      /*state*/
      2 && t4_value !== (t4_value =
      /*state*/
      ctx[1][
      /*id*/
      ctx[15]].url + "")) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.set_data_dev)(t4, t4_value);

      if (dirty &
      /*state*/
      2 && a_href_value !== (a_href_value =
      /*state*/
      ctx[1][
      /*id*/
      ctx[15]].url)) {
        (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(a, "href", a_href_value);
      }
    },
    d: function destroy(detaching) {
      if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(div);
      if (if_block) if_block.d();
    }
  };
  (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
    block,
    id: create_if_block_2.name,
    type: "if",
    source: "(203:8) {#if state[id].bg === 'warning'}",
    ctx
  });
  return block;
} // (205:30) {#if state[id].error}


function create_if_block_3(ctx) {
  let t0;
  let t1_value =
  /*state*/
  ctx[1][
  /*id*/
  ctx[15]].error + "";
  let t1;
  const block = {
    c: function create() {
      t0 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.text)(": ");
      t1 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.text)(t1_value);
    },
    m: function mount(target, anchor) {
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, t0, anchor);
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, t1, anchor);
    },
    p: function update(ctx, dirty) {
      if (dirty &
      /*state*/
      2 && t1_value !== (t1_value =
      /*state*/
      ctx[1][
      /*id*/
      ctx[15]].error + "")) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.set_data_dev)(t1, t1_value);
    },
    d: function destroy(detaching) {
      if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(t0);
      if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(t1);
    }
  };
  (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
    block,
    id: create_if_block_3.name,
    type: "if",
    source: "(205:30) {#if state[id].error}",
    ctx
  });
  return block;
} // (171:4) {#each Object.keys(state) as id}


function create_each_block_1(ctx) {
  let div2;
  let div1;
  let div0;
  let t0_value =
  /*state*/
  ctx[1][
  /*id*/
  ctx[15]].filename + "";
  let t0;
  let div0_class_value;
  let div0_aria_valuenow_value;
  let t1;
  let button;
  let t3;
  let t4;
  let mounted;
  let dispose;

  function click_handler() {
    return (
      /*click_handler*/
      ctx[6](
      /*id*/
      ctx[15])
    );
  }

  let if_block0 =
  /*state*/
  ctx[1][
  /*id*/
  ctx[15]].bg === 'error' && create_if_block_4(ctx);
  let if_block1 =
  /*state*/
  ctx[1][
  /*id*/
  ctx[15]].bg === 'warning' && create_if_block_2(ctx);
  const block = {
    c: function create() {
      div2 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.element)("div");
      div1 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.element)("div");
      div0 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.element)("div");
      t0 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.text)(t0_value);
      t1 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.space)();
      button = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.element)("button");
      button.textContent = "×";
      t3 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.space)();
      if (if_block0) if_block0.c();
      t4 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.space)();
      if (if_block1) if_block1.c();
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(div0, "class", div0_class_value = "progress-bar bg-" +
      /*state*/
      ctx[1][
      /*id*/
      ctx[15]].bg + " svelte-7t3aq4");
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(div0, "role", "progressbar");
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(div0, "aria-valuemin", "0");
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(div0, "aria-valuemax", "100");
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(div0, "aria-valuenow", div0_aria_valuenow_value =
      /*state*/
      ctx[1][
      /*id*/
      ctx[15]].progress);
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.set_style)(div0, "width",
      /*state*/
      ctx[1][
      /*id*/
      ctx[15]].progress + "%");
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.toggle_class)(div0, "progress-bar-striped",
      /*state*/
      ctx[1][
      /*id*/
      ctx[15]].striped);
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.toggle_class)(div0, "progress-bar-animated",
      /*state*/
      ctx[1][
      /*id*/
      ctx[15]].animated);
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.add_location)(div0, file, 173, 10, 4167);
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(button, "type", "button");
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(button, "class", "btn btn-sm bg-danger text-white");
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.add_location)(button, file, 183, 10, 4580);
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(div1, "class", "progress bg-light svelte-7t3aq4");
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.add_location)(div1, file, 172, 8, 4125);
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.add_location)(div2, file, 171, 6, 4111);
    },
    m: function mount(target, anchor) {
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, div2, anchor);
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(div2, div1);
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(div1, div0);
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(div0, t0);
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(div1, t1);
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(div1, button);
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(div2, t3);
      if (if_block0) if_block0.m(div2, null);
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(div2, t4);
      if (if_block1) if_block1.m(div2, null);

      if (!mounted) {
        dispose = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.listen_dev)(button, "click", click_handler, false, false, false);
        mounted = true;
      }
    },
    p: function update(new_ctx, dirty) {
      ctx = new_ctx;
      if (dirty &
      /*state*/
      2 && t0_value !== (t0_value =
      /*state*/
      ctx[1][
      /*id*/
      ctx[15]].filename + "")) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.set_data_dev)(t0, t0_value);

      if (dirty &
      /*state*/
      2 && div0_class_value !== (div0_class_value = "progress-bar bg-" +
      /*state*/
      ctx[1][
      /*id*/
      ctx[15]].bg + " svelte-7t3aq4")) {
        (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(div0, "class", div0_class_value);
      }

      if (dirty &
      /*state*/
      2 && div0_aria_valuenow_value !== (div0_aria_valuenow_value =
      /*state*/
      ctx[1][
      /*id*/
      ctx[15]].progress)) {
        (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(div0, "aria-valuenow", div0_aria_valuenow_value);
      }

      if (dirty &
      /*state*/
      2) {
        (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.set_style)(div0, "width",
        /*state*/
        ctx[1][
        /*id*/
        ctx[15]].progress + "%");
      }

      if (dirty &
      /*state, state, Object*/
      2) {
        (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.toggle_class)(div0, "progress-bar-striped",
        /*state*/
        ctx[1][
        /*id*/
        ctx[15]].striped);
      }

      if (dirty &
      /*state, state, Object*/
      2) {
        (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.toggle_class)(div0, "progress-bar-animated",
        /*state*/
        ctx[1][
        /*id*/
        ctx[15]].animated);
      }

      if (
      /*state*/
      ctx[1][
      /*id*/
      ctx[15]].bg === 'error') {
        if (if_block0) {
          if_block0.p(ctx, dirty);
        } else {
          if_block0 = create_if_block_4(ctx);
          if_block0.c();
          if_block0.m(div2, t4);
        }
      } else if (if_block0) {
        if_block0.d(1);
        if_block0 = null;
      }

      if (
      /*state*/
      ctx[1][
      /*id*/
      ctx[15]].bg === 'warning') {
        if (if_block1) {
          if_block1.p(ctx, dirty);
        } else {
          if_block1 = create_if_block_2(ctx);
          if_block1.c();
          if_block1.m(div2, null);
        }
      } else if (if_block1) {
        if_block1.d(1);
        if_block1 = null;
      }
    },
    d: function destroy(detaching) {
      if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(div2);
      if (if_block0) if_block0.d();
      if (if_block1) if_block1.d();
      mounted = false;
      dispose();
    }
  };
  (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
    block,
    id: create_each_block_1.name,
    type: "each",
    source: "(171:4) {#each Object.keys(state) as id}",
    ctx
  });
  return block;
} // (213:4) {#if args.examples && Object.keys(args.examples).length > 0}


function create_if_block(ctx) {
  let div2;
  let div1;
  let span;
  let t0;
  let show_if = Object.keys(
  /*args*/
  ctx[0].examples).length > 1;
  let t1;
  let sup;
  let i;
  let t2;
  let t3;
  let div0;
  let if_block = show_if && create_if_block_1(ctx);
  let each_value = Object.keys(
  /*args*/
  ctx[0].examples);
  (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.validate_each_argument)(each_value);
  let each_blocks = [];

  for (let i = 0; i < each_value.length; i += 1) {
    each_blocks[i] = create_each_block(get_each_context(ctx, each_value, i));
  }

  const block = {
    c: function create() {
      div2 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.element)("div");
      div1 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.element)("div");
      span = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.element)("span");
      t0 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.text)("Example");
      if (if_block) if_block.c();
      t1 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.space)();
      sup = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.element)("sup");
      i = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.element)("i");
      t2 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.text)(":");
      t3 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.space)();
      div0 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.element)("div");

      for (let i = 0; i < each_blocks.length; i += 1) {
        each_blocks[i].c();
      }

      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(i, "class", "far fa-question-circle");
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.add_location)(i, file, 217, 95, 6072);
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(sup, "data-toggle", "tooltip");
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(sup, "title", "Load the example file directly into the appyter");
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.add_location)(sup, file, 217, 12, 5989);
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(span, "class", "d-table-cell mr-1 my-1 p-1 text-right");
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.set_style)(span, "white-space", "nowrap");
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.add_location)(span, file, 215, 10, 5827);
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(div0, "class", "d-table-cell table-grow d-flex flex-wrap justify-content-start align-items-center");
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.add_location)(div0, file, 219, 10, 6146);
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(div1, "class", "d-table-row");
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.add_location)(div1, file, 214, 8, 5791);
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(div2, "class", "d-table");
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.add_location)(div2, file, 213, 6, 5761);
    },
    m: function mount(target, anchor) {
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, div2, anchor);
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(div2, div1);
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(div1, span);
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(span, t0);
      if (if_block) if_block.m(span, null);
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(span, t1);
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(span, sup);
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(sup, i);
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(span, t2);
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(div1, t3);
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(div1, div0);

      for (let i = 0; i < each_blocks.length; i += 1) {
        each_blocks[i].m(div0, null);
      }
    },
    p: function update(ctx, dirty) {
      if (dirty &
      /*args*/
      1) show_if = Object.keys(
      /*args*/
      ctx[0].examples).length > 1;

      if (show_if) {
        if (if_block) {} else {
          if_block = create_if_block_1(ctx);
          if_block.c();
          if_block.m(span, t1);
        }
      } else if (if_block) {
        if_block.d(1);
        if_block = null;
      }

      if (dirty &
      /*args, Object, load_file*/
      17) {
        each_value = Object.keys(
        /*args*/
        ctx[0].examples);
        (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.validate_each_argument)(each_value);
        let i;

        for (i = 0; i < each_value.length; i += 1) {
          const child_ctx = get_each_context(ctx, each_value, i);

          if (each_blocks[i]) {
            each_blocks[i].p(child_ctx, dirty);
          } else {
            each_blocks[i] = create_each_block(child_ctx);
            each_blocks[i].c();
            each_blocks[i].m(div0, null);
          }
        }

        for (; i < each_blocks.length; i += 1) {
          each_blocks[i].d(1);
        }

        each_blocks.length = each_value.length;
      }
    },
    d: function destroy(detaching) {
      if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(div2);
      if (if_block) if_block.d();
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.destroy_each)(each_blocks, detaching);
    }
  };
  (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
    block,
    id: create_if_block.name,
    type: "if",
    source: "(213:4) {#if args.examples && Object.keys(args.examples).length > 0}",
    ctx
  });
  return block;
} // (217:19) {#if Object.keys(args.examples).length > 1}


function create_if_block_1(ctx) {
  let t;
  const block = {
    c: function create() {
      t = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.text)("s");
    },
    m: function mount(target, anchor) {
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, t, anchor);
    },
    d: function destroy(detaching) {
      if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(t);
    }
  };
  (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
    block,
    id: create_if_block_1.name,
    type: "if",
    source: "(217:19) {#if Object.keys(args.examples).length > 1}",
    ctx
  });
  return block;
} // (221:12) {#each Object.keys(args.examples) as example_name}


function create_each_block(ctx) {
  let span;
  let button;
  let t0_value =
  /*example_name*/
  ctx[12] + "";
  let t0;
  let a;
  let img;
  let img_src_value;
  let a_href_value;
  let t1;
  let mounted;
  let dispose;

  function click_handler_1() {
    return (
      /*click_handler_1*/
      ctx[7](
      /*example_name*/
      ctx[12])
    );
  }

  const block = {
    c: function create() {
      span = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.element)("span");
      button = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.element)("button");
      t0 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.text)(t0_value);
      a = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.element)("a");
      img = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.element)("img");
      t1 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.space)();
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(button, "type", "button");
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(button, "class", "text-btn");
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.add_location)(button, file, 222, 16, 6395);
      if (!(0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.src_url_equal)(img.src, img_src_value = "static/download.png")) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(img, "src", img_src_value);
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(img, "alt", "Download");
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.set_style)(img, "width", "20px");
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.add_location)(img, file, 227, 15, 6676);
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(a, "class", "ml-2");
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(a, "href", a_href_value =
      /*args*/
      ctx[0].examples[
      /*example_name*/
      ctx[12]]);
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(a, "target", "_blank");
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.add_location)(a, file, 224, 40, 6562);
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(span, "class", "text-sm m-1 p-1");
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.set_style)(span, "white-space", "nowrap");
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.add_location)(span, file, 221, 14, 6319);
    },
    m: function mount(target, anchor) {
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, span, anchor);
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(span, button);
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(button, t0);
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(span, a);
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(a, img);
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(span, t1);

      if (!mounted) {
        dispose = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.listen_dev)(button, "click", click_handler_1, false, false, false);
        mounted = true;
      }
    },
    p: function update(new_ctx, dirty) {
      ctx = new_ctx;
      if (dirty &
      /*args*/
      1 && t0_value !== (t0_value =
      /*example_name*/
      ctx[12] + "")) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.set_data_dev)(t0, t0_value);

      if (dirty &
      /*args*/
      1 && a_href_value !== (a_href_value =
      /*args*/
      ctx[0].examples[
      /*example_name*/
      ctx[12]])) {
        (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(a, "href", a_href_value);
      }
    },
    d: function destroy(detaching) {
      if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(span);
      mounted = false;
      dispose();
    }
  };
  (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
    block,
    id: create_each_block.name,
    type: "each",
    source: "(221:12) {#each Object.keys(args.examples) as example_name}",
    ctx
  });
  return block;
}

function create_fragment(ctx) {
  let div2;
  let div1;
  let div0;
  let input;
  let input_id_value;
  let input_multiple_value;
  let t0;
  let textarea;
  let textarea_name_value;
  let t1;
  let label;
  let label_for_value;
  let t2;
  let t3;
  let show_if =
  /*args*/
  ctx[0].examples && Object.keys(
  /*args*/
  ctx[0].examples).length > 0;
  let each_value_1 = Object.keys(
  /*state*/
  ctx[1]);
  (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.validate_each_argument)(each_value_1);
  let each_blocks = [];

  for (let i = 0; i < each_value_1.length; i += 1) {
    each_blocks[i] = create_each_block_1(get_each_context_1(ctx, each_value_1, i));
  }

  let if_block = show_if && create_if_block(ctx);
  const block = {
    c: function create() {
      div2 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.element)("div");
      div1 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.element)("div");
      div0 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.element)("div");
      input = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.element)("input");
      t0 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.space)();
      textarea = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.element)("textarea");
      t1 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.space)();
      label = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.element)("label");
      t2 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.space)();

      for (let i = 0; i < each_blocks.length; i += 1) {
        each_blocks[i].c();
      }

      t3 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.space)();
      if (if_block) if_block.c();
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(input, "type", "file");
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(input, "class", "custom-file-input");
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(input, "id", input_id_value =
      /*args*/
      ctx[0].name);
      input.multiple = input_multiple_value =
      /*args*/
      ctx[0].multiple;
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.add_location)(input, file, 156, 6, 3733);
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(textarea, "class", "hidden");
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(textarea, "name", textarea_name_value =
      /*args*/
      ctx[0].name);
      textarea.value =
      /*full_filenames*/
      ctx[3];
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.add_location)(textarea, file, 163, 6, 3895);
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(label, "class", "custom-file-label");
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(label, "for", label_for_value =
      /*args*/
      ctx[0].name);
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.add_location)(label, file, 168, 6, 3999);
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(div0, "class", "custom-file");
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(div0, "dropzone", "copy");
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.add_location)(div0, file, 155, 4, 3685);
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(div1, "class", "col-lg-8 pt-2 pt-lg-0 mx-auto");
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.add_location)(div1, file, 154, 2, 3637);
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(div2, "class", "row px-4 px-lg-3 pb-4");
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.add_location)(div2, file, 153, 0, 3599);
    },
    l: function claim(nodes) {
      throw new Error_1("options.hydrate only works if the component was compiled with the `hydratable: true` option");
    },
    m: function mount(target, anchor) {
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, div2, anchor);
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(div2, div1);
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(div1, div0);
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(div0, input);
      /*input_binding*/

      ctx[5](input);
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(div0, t0);
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(div0, textarea);
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(div0, t1);
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(div0, label);
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(div1, t2);

      for (let i = 0; i < each_blocks.length; i += 1) {
        each_blocks[i].m(div1, null);
      }

      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(div1, t3);
      if (if_block) if_block.m(div1, null);
    },
    p: function update(ctx, [dirty]) {
      if (dirty &
      /*args*/
      1 && input_id_value !== (input_id_value =
      /*args*/
      ctx[0].name)) {
        (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(input, "id", input_id_value);
      }

      if (dirty &
      /*args*/
      1 && input_multiple_value !== (input_multiple_value =
      /*args*/
      ctx[0].multiple)) {
        (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.prop_dev)(input, "multiple", input_multiple_value);
      }

      if (dirty &
      /*args*/
      1 && textarea_name_value !== (textarea_name_value =
      /*args*/
      ctx[0].name)) {
        (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(textarea, "name", textarea_name_value);
      }

      if (dirty &
      /*full_filenames*/
      8) {
        (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.prop_dev)(textarea, "value",
        /*full_filenames*/
        ctx[3]);
      }

      if (dirty &
      /*args*/
      1 && label_for_value !== (label_for_value =
      /*args*/
      ctx[0].name)) {
        (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(label, "for", label_for_value);
      }

      if (dirty &
      /*state, Object*/
      2) {
        each_value_1 = Object.keys(
        /*state*/
        ctx[1]);
        (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.validate_each_argument)(each_value_1);
        let i;

        for (i = 0; i < each_value_1.length; i += 1) {
          const child_ctx = get_each_context_1(ctx, each_value_1, i);

          if (each_blocks[i]) {
            each_blocks[i].p(child_ctx, dirty);
          } else {
            each_blocks[i] = create_each_block_1(child_ctx);
            each_blocks[i].c();
            each_blocks[i].m(div1, t3);
          }
        }

        for (; i < each_blocks.length; i += 1) {
          each_blocks[i].d(1);
        }

        each_blocks.length = each_value_1.length;
      }

      if (dirty &
      /*args*/
      1) show_if =
      /*args*/
      ctx[0].examples && Object.keys(
      /*args*/
      ctx[0].examples).length > 0;

      if (show_if) {
        if (if_block) {
          if_block.p(ctx, dirty);
        } else {
          if_block = create_if_block(ctx);
          if_block.c();
          if_block.m(div1, null);
        }
      } else if (if_block) {
        if_block.d(1);
        if_block = null;
      }
    },
    i: svelte_internal__WEBPACK_IMPORTED_MODULE_0__.noop,
    o: svelte_internal__WEBPACK_IMPORTED_MODULE_0__.noop,
    d: function destroy(detaching) {
      if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(div2);
      /*input_binding*/

      ctx[5](null);
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.destroy_each)(each_blocks, detaching);
      if (if_block) if_block.d();
    }
  };
  (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
    block,
    id: create_fragment.name,
    type: "component",
    source: "",
    ctx
  });
  return block;
}

function instance($$self, $$props, $$invalidate) {
  let $auth;
  (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.validate_store)(_lib_stores_keycloak_auth_store__WEBPACK_IMPORTED_MODULE_1__["default"], 'auth');
  (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.component_subscribe)($$self, _lib_stores_keycloak_auth_store__WEBPACK_IMPORTED_MODULE_1__["default"], $$value => $$invalidate(10, $auth = $$value));
  let {
    $$slots: slots = {},
    $$scope
  } = $$props;
  (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.validate_slots)('Upload', slots, []);
  let {
    args
  } = $$props; // file field DOM element

  let fileField; // field state

  let state = {};
  let filenames;
  let full_filenames;
  let ctx; // setup uploading event handlers

  async function setup_upload(siofu) {
    siofu.listenOnInput(fileField);
    siofu.addEventListener('start', function (evt) {
      evt.file.meta.auth = $auth.keycloak.token;
      $$invalidate(1, state = { ...(args.multiple ? state : {}),
        [evt.file.name]: {
          filename: evt.file.name,
          striped: true,
          bg: 'primary',
          progress: 0
        }
      });
    });
    siofu.addEventListener('progress', function (evt) {
      if (!(evt.file.name in state)) return;
      $$invalidate(1, state = { ...state,
        [evt.file.name]: { ...state[evt.file.name],
          progress: evt.bytesLoaded / evt.file.size * 100 | 0,
          animated: true
        }
      });
    });
    siofu.addEventListener('complete', function (evt) {
      if (!(evt.file.name in state)) return;
      $$invalidate(1, state = { ...state,
        [evt.file.name]: {
          filename: evt.file.name,
          full_filename: evt.detail.full_filename,
          progress: 100,
          bg: 'success',
          striped: false,
          animated: false
        }
      });
    });
    siofu.addEventListener('error', function (evt) {
      console.error(evt);
      if (!(evt.file.name in state)) return;
      $$invalidate(1, state = { ...state,
        [evt.file.name]: {
          progress: 100,
          bg: 'danger',
          error: evt.error,
          striped: false,
          animated: false
        }
      });
    });
  } // trigger example download


  async function load_file(url, file) {
    $$invalidate(1, state = { ...(args.multiple ? state : {}),
      [file]: {
        filename: file,
        striped: true,
        animated: true,
        bg: 'primary',
        progress: 0
      }
    });

    if (url.indexOf('://') === -1) {
      url = new URL(url, document.baseURI).href;
    }

    try {
      const res = await fetch(`check/${url}`);
      if (res.status !== 200) throw new Error();
      if (!(file in state)) return;
      $$invalidate(1, state = { ...state,
        [file]: { ...state[file],
          full_filename: `${url}#${file}`,
          bg: 'success',
          animated: false,
          striped: false,
          progress: 100
        }
      });
    } catch (e) {
      if (!(file in state)) return;
      $$invalidate(1, state = { ...state,
        [file]: { ...state[file],
          progress: 100,
          url,
          bg: 'warning',
          striped: false,
          animated: false
        }
      });
    }
  }

  (0,svelte__WEBPACK_IMPORTED_MODULE_2__.onMount)(async () => {
    const {
      default: SocketIOFileUpload
    } = await __webpack_require__.e(/*! import() */ "vendors-node_modules_socketio-file-upload_client_js").then(__webpack_require__.t.bind(__webpack_require__, /*! socketio-file-upload */ "./node_modules/socketio-file-upload/client.js", 23));
    const {
      default: socket
    } = await Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_uuid_dist_esm-browser_v4_js-node_modules_socket_io-client_build_esm_index_js"), __webpack_require__.e("lib_socket_js")]).then(__webpack_require__.bind(__webpack_require__, /*! @/lib/socket */ "./lib/socket.js"));
    const siofu = new SocketIOFileUpload(socket);
    ctx = {
      socket,
      siofu
    };
    await setup_upload(siofu);
  });
  const writable_props = ['args'];
  Object_1.keys($$props).forEach(key => {
    if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console_1.warn(`<Upload> was created with unknown prop '${key}'`);
  });

  function input_binding($$value) {
    svelte_internal__WEBPACK_IMPORTED_MODULE_0__.binding_callbacks[$$value ? 'unshift' : 'push'](() => {
      fileField = $$value;
      $$invalidate(2, fileField);
    });
  }

  const click_handler = id => {
    const {
      [id]: current,
      ...new_state
    } = state;

    if (current.progress !== 100) {} // TODO: abort
    // ctx.siofu.abort(id, ctx.socket)


    $$invalidate(1, state = new_state);
  };

  const click_handler_1 = example_name => load_file(args.examples[example_name], example_name);

  $$self.$$set = $$props => {
    if ('args' in $$props) $$invalidate(0, args = $$props.args);
  };

  $$self.$capture_state = () => ({
    auth: _lib_stores_keycloak_auth_store__WEBPACK_IMPORTED_MODULE_1__["default"],
    onMount: svelte__WEBPACK_IMPORTED_MODULE_2__.onMount,
    args,
    fileField,
    state,
    filenames,
    full_filenames,
    ctx,
    setup_upload,
    load_file,
    $auth
  });

  $$self.$inject_state = $$props => {
    if ('args' in $$props) $$invalidate(0, args = $$props.args);
    if ('fileField' in $$props) $$invalidate(2, fileField = $$props.fileField);
    if ('state' in $$props) $$invalidate(1, state = $$props.state);
    if ('filenames' in $$props) filenames = $$props.filenames;
    if ('full_filenames' in $$props) $$invalidate(3, full_filenames = $$props.full_filenames);
    if ('ctx' in $$props) ctx = $$props.ctx;
  };

  if ($$props && "$$inject" in $$props) {
    $$self.$inject_state($$props.$$inject);
  }

  $$self.$$.update = () => {
    if ($$self.$$.dirty &
    /*state*/
    2) {
      $: filenames = Object.keys(state).reduce((files, file) => state[file].filename !== undefined ? [...files, state[file].filename] : files, []).join(', ');
    }

    if ($$self.$$.dirty &
    /*state*/
    2) {
      $: $$invalidate(3, full_filenames = Object.keys(state).reduce((files, file) => state[file].full_filename !== undefined ? [...files, state[file].full_filename] : files, []).join('\n'));
    }
  };

  return [args, state, fileField, full_filenames, load_file, input_binding, click_handler, click_handler_1];
}

class Upload extends svelte_internal__WEBPACK_IMPORTED_MODULE_0__.SvelteComponentDev {
  constructor(options) {
    super(options);
    (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.init)(this, options, instance, create_fragment, svelte_internal__WEBPACK_IMPORTED_MODULE_0__.safe_not_equal, {
      args: 0
    }, add_css);
    (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterComponent", {
      component: this,
      tagName: "Upload",
      options,
      id: create_fragment.name
    });
    const {
      ctx
    } = this.$$;
    const props = options.props || {};

    if (
    /*args*/
    ctx[0] === undefined && !('args' in props)) {
      console_1.warn("<Upload> was created without expected prop 'args'");
    }
  }

  get args() {
    throw new Error_1("<Upload>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }

  set args(value) {
    throw new Error_1("<Upload>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }

}




if (module && module.hot) {}

/* harmony default export */ __webpack_exports__["default"] = (Upload);

/***/ }),

/***/ "./lib/stores/keycloak_auth_store.js":
/*!*******************************************!*\
  !*** ./lib/stores/keycloak_auth_store.js ***!
  \*******************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony import */ var svelte_store__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! svelte/store */ "./node_modules/svelte/store/index.mjs");
/* harmony import */ var _lib_stores_url_hash_store_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/stores/url_hash_store.js */ "./lib/stores/url_hash_store.js");
/* harmony import */ var _utils_with_timeout__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/utils/with_timeout */ "./utils/with_timeout.js");




function keycloak_auth_store() {
  const enabled = window._config.EXTRAS.includes('catalog-integration') && window._config.keycloak !== undefined;
  const {
    subscribe,
    set
  } = (0,svelte_store__WEBPACK_IMPORTED_MODULE_0__.writable)({
    state: enabled ? 'init' : 'error',
    keycloak: {}
  });

  if (enabled) {
    __webpack_require__.e(/*! import() */ "vendors-node_modules_keycloak-js_dist_keycloak_mjs").then(__webpack_require__.bind(__webpack_require__, /*! keycloak-js */ "./node_modules/keycloak-js/dist/keycloak.mjs")).then((0,_utils_with_timeout__WEBPACK_IMPORTED_MODULE_2__["default"])(async ({
      default: Keycloak
    }) => {
      const keycloak = new Keycloak(window._config.keycloak.params);
      const keycloakLogout = keycloak.logout;
      Object.assign(keycloak, {
        getValidToken: async () => {
          try {
            await keycloak.updateToken(30);
          } catch (e) {
            console.error(e);
            set({
              state: 'guest',
              keycloak
            });
          }

          return keycloak.token;
        },
        logout: () => {
          keycloakLogout();
          set({
            state: 'guest',
            keycloak
          });
        }
      });
      const authenticated = await keycloak.init({ ...window._config.keycloak.init,
        redirectUri: window.location.href + (window.location.href.includes('#') ? '' : '#') + (window.location.href.includes('?') ? '' : '?')
      });
      set({
        state: authenticated ? 'auth' : 'guest',
        keycloak
      }); // cleanup keycloak auth params

      _lib_stores_url_hash_store_js__WEBPACK_IMPORTED_MODULE_1__["default"].update($hash => {
        const params = { ...$hash.params
        };
        if ('code' in params) delete params['code'];
        if ('session_state' in params) delete params['session_state'];
        if ('state' in params) delete params['state'];
        return { ...$hash,
          params
        };
      });
    }, 5000)).catch(err => {
      console.error(err);
      set({
        state: 'error',
        keycloak: {}
      });
    });
  }

  return {
    subscribe
  };
}

const auth = keycloak_auth_store();
auth.subscribe(auth => {
  if (auth.state === 'auth' && document.cookie.match(/^(.*;)?\s*authorization\s*=\s*[^;]+(.*)?$/) === null) {
    document.cookie = `authorization=${auth.keycloak.token}; expires=${new Date(auth.keycloak.tokenParsed.exp * 1000).toUTCString()}; secure`;
  }
});
/* harmony default export */ __webpack_exports__["default"] = (auth);

/***/ }),

/***/ "./lib/stores/url_hash_store.js":
/*!**************************************!*\
  !*** ./lib/stores/url_hash_store.js ***!
  \**************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony import */ var svelte_store__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! svelte/store */ "./node_modules/svelte/store/index.mjs");


function params_parse(params_encoded) {
  if (params_encoded === '') return {};
  return params_encoded.split('&').map(param_pair => param_pair.split('=').map(decodeURIComponent)).reduce((params, [key, value]) => ({ ...params,
    [key]: value !== undefined ? value : true
  }), {});
}

function params_stringify(params) {
  return Object.keys(params).filter(param => params[param] !== undefined && params[param] !== '').map(param => params[param] === true ? encodeURIComponent(param) : [param, params[param]].map(encodeURIComponent).join('=')).join('&');
}

function fragment_parse(hash_encoded) {
  // if (!hash_encoded.startsWith('/')) hash_encoded = `/${hash_encoded}`
  const q = hash_encoded.indexOf('?');

  if (q === -1) {
    return {
      path: hash_encoded,
      params: {}
    };
  } else {
    const [path, params_encoded] = [hash_encoded.slice(0, q), hash_encoded.slice(q + 1)];
    const params = params_parse(params_encoded);
    return {
      path,
      params
    };
  }
}

function hash_stringify({
  path,
  params
}) {
  const params_encoded = params_stringify(params);

  if (params_encoded === '') {
    return path;
  } else {
    return `${path}?${params_encoded}`;
  }
}

function fragment_get() {
  return (window.location.hash || '#').slice(1);
}

function server_get() {
  return `${window.location.pathname}${window.location.search}`;
}

function url_hash_store() {
  const {
    path: initPath,
    params: initParams,
    server: initServer
  } = { ...fragment_parse(fragment_get()),
    server: fragment_parse(server_get())
  };
  const {
    subscribe,
    update,
    set
  } = (0,svelte_store__WEBPACK_IMPORTED_MODULE_0__.writable)({
    path: initPath,
    params: initParams,
    server: initServer
  });
  let lastPath = initPath;
  subscribe(({
    path,
    params,
    server
  }) => {
    const newHash = hash_stringify({
      path,
      params
    });

    if (path !== lastPath) {
      // add changes to path to history
      window.location.hash = newHash;
      lastPath = path;
    } else {
      // don't add changes to params to history, but modify the hash url
      const url = `${window.location.origin}${window.location.pathname}${window.location.search}`;
      history.replaceState(undefined, undefined, newHash !== '' ? `${url}#${newHash}` : url);
    }
  });
  window.addEventListener('hashchange', () => set({ ...fragment_parse(fragment_get()),
    initServer
  }));
  return {
    subscribe,
    update,
    set
  };
}

const hash = url_hash_store();
/* harmony default export */ __webpack_exports__["default"] = (hash);

/***/ }),

/***/ "./node_modules/svelte/store/index.mjs":
/*!*********************************************!*\
  !*** ./node_modules/svelte/store/index.mjs ***!
  \*********************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "derived": function() { return /* binding */ derived; },
/* harmony export */   "get": function() { return /* reexport safe */ _internal_index_mjs__WEBPACK_IMPORTED_MODULE_0__.get_store_value; },
/* harmony export */   "readable": function() { return /* binding */ readable; },
/* harmony export */   "writable": function() { return /* binding */ writable; }
/* harmony export */ });
/* harmony import */ var _internal_index_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../internal/index.mjs */ "./node_modules/svelte/internal/index.mjs");


const subscriber_queue = [];
/**
 * Creates a `Readable` store that allows reading by subscription.
 * @param value initial value
 * @param {StartStopNotifier}start start and stop notifications for subscriptions
 */

function readable(value, start) {
  return {
    subscribe: writable(value, start).subscribe
  };
}
/**
 * Create a `Writable` store that allows both updating and reading by subscription.
 * @param {*=}value initial value
 * @param {StartStopNotifier=}start start and stop notifications for subscriptions
 */


function writable(value, start = _internal_index_mjs__WEBPACK_IMPORTED_MODULE_0__.noop) {
  let stop;
  const subscribers = new Set();

  function set(new_value) {
    if ((0,_internal_index_mjs__WEBPACK_IMPORTED_MODULE_0__.safe_not_equal)(value, new_value)) {
      value = new_value;

      if (stop) {
        // store is ready
        const run_queue = !subscriber_queue.length;

        for (const subscriber of subscribers) {
          subscriber[1]();
          subscriber_queue.push(subscriber, value);
        }

        if (run_queue) {
          for (let i = 0; i < subscriber_queue.length; i += 2) {
            subscriber_queue[i][0](subscriber_queue[i + 1]);
          }

          subscriber_queue.length = 0;
        }
      }
    }
  }

  function update(fn) {
    set(fn(value));
  }

  function subscribe(run, invalidate = _internal_index_mjs__WEBPACK_IMPORTED_MODULE_0__.noop) {
    const subscriber = [run, invalidate];
    subscribers.add(subscriber);

    if (subscribers.size === 1) {
      stop = start(set) || _internal_index_mjs__WEBPACK_IMPORTED_MODULE_0__.noop;
    }

    run(value);
    return () => {
      subscribers.delete(subscriber);

      if (subscribers.size === 0) {
        stop();
        stop = null;
      }
    };
  }

  return {
    set,
    update,
    subscribe
  };
}

function derived(stores, fn, initial_value) {
  const single = !Array.isArray(stores);
  const stores_array = single ? [stores] : stores;
  const auto = fn.length < 2;
  return readable(initial_value, set => {
    let inited = false;
    const values = [];
    let pending = 0;
    let cleanup = _internal_index_mjs__WEBPACK_IMPORTED_MODULE_0__.noop;

    const sync = () => {
      if (pending) {
        return;
      }

      cleanup();
      const result = fn(single ? values[0] : values, set);

      if (auto) {
        set(result);
      } else {
        cleanup = (0,_internal_index_mjs__WEBPACK_IMPORTED_MODULE_0__.is_function)(result) ? result : _internal_index_mjs__WEBPACK_IMPORTED_MODULE_0__.noop;
      }
    };

    const unsubscribers = stores_array.map((store, i) => (0,_internal_index_mjs__WEBPACK_IMPORTED_MODULE_0__.subscribe)(store, value => {
      values[i] = value;
      pending &= ~(1 << i);

      if (inited) {
        sync();
      }
    }, () => {
      pending |= 1 << i;
    }));
    inited = true;
    sync();
    return function stop() {
      (0,_internal_index_mjs__WEBPACK_IMPORTED_MODULE_0__.run_all)(unsubscribers);
      cleanup();
    };
  });
}



/***/ }),

/***/ "./utils/with_timeout.js":
/*!*******************************!*\
  !*** ./utils/with_timeout.js ***!
  \*******************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": function() { return /* binding */ with_timeout; }
/* harmony export */ });
function with_timeout(promise, timeout) {
  return (...args) => new Promise((resolve, reject) => {
    let ctx = {
      done: false
    };
    setTimeout(() => {
      if (ctx.done) return;
      ctx.done = true;
      reject('Timeout');
    }, timeout);
    promise(...args).then(value => {
      if (ctx.done) return;
      ctx.done = true;
      resolve(value);
    }).catch(e => {
      if (ctx.done) return;
      ctx.done = true;
      reject(e);
    });
  });
}

/***/ })

}]);
//# sourceMappingURL=extras_file-field_Upload_svelte.js.map