"use strict";
(self["webpackChunkappyter_js"] = self["webpackChunkappyter_js"] || []).push([["components_fields_StringField_svelte"],{

/***/ "./components/fields/StringField.svelte":
/*!**********************************************!*\
  !*** ./components/fields/StringField.svelte ***!
  \**********************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony import */ var svelte_internal__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! svelte/internal */ "./node_modules/svelte/internal/index.mjs");
/* harmony import */ var _utils_re_full__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/utils/re_full */ "./utils/re_full.js");
/* harmony import */ var _Users_giacomomarino_appyter_js_node_modules_svelte_loader_lib_hot_api_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node_modules/svelte-loader/lib/hot-api.js */ "./node_modules/svelte-loader/lib/hot-api.js");
/* harmony import */ var _Users_giacomomarino_appyter_js_node_modules_svelte_hmr_runtime_proxy_adapter_dom_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./node_modules/svelte-hmr/runtime/proxy-adapter-dom.js */ "./node_modules/svelte-hmr/runtime/proxy-adapter-dom.js");
/* module decorator */ module = __webpack_require__.hmd(module);
/* components/fields/StringField.svelte generated by Svelte v3.46.4 */

const {
  Object: Object_1
} = svelte_internal__WEBPACK_IMPORTED_MODULE_0__.globals;

const file = "components/fields/StringField.svelte";

function get_each_context(ctx, list, i) {
  const child_ctx = ctx.slice();
  child_ctx[5] = list[i];
  return child_ctx;
} // (23:16) {#if args.description}


function create_if_block_4(ctx) {
  let sup;
  let i;
  let sup_title_value;
  const block = {
    c: function create() {
      sup = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.element)("sup");
      i = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.element)("i");
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(i, "class", "far fa-question-circle");
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.add_location)(i, file, 22, 90, 567);
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(sup, "data-toggle", "tooltip");
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(sup, "title", sup_title_value =
      /*args*/
      ctx[0].description);
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.add_location)(sup, file, 22, 38, 515);
    },
    m: function mount(target, anchor) {
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, sup, anchor);
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(sup, i);
    },
    p: function update(ctx, dirty) {
      if (dirty &
      /*args*/
      1 && sup_title_value !== (sup_title_value =
      /*args*/
      ctx[0].description)) {
        (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(sup, "title", sup_title_value);
      }
    },
    d: function destroy(detaching) {
      if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(sup);
    }
  };
  (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
    block,
    id: create_if_block_4.name,
    type: "if",
    source: "(23:16) {#if args.description}",
    ctx
  });
  return block;
} // (42:6) {:else}


function create_else_block_1(ctx) {
  let t;
  const block = {
    c: function create() {
      t = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.text)("String should not be empty.");
    },
    m: function mount(target, anchor) {
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, t, anchor);
    },
    p: svelte_internal__WEBPACK_IMPORTED_MODULE_0__.noop,
    d: function destroy(detaching) {
      if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(t);
    }
  };
  (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
    block,
    id: create_else_block_1.name,
    type: "else",
    source: "(42:6) {:else}",
    ctx
  });
  return block;
} // (36:6) {#if args.value}


function create_if_block_2(ctx) {
  let if_block_anchor;

  function select_block_type_1(ctx, dirty) {
    if (
    /*args*/
    ctx[0].feedback) return create_if_block_3;
    return create_else_block;
  }

  let current_block_type = select_block_type_1(ctx, -1);
  let if_block = current_block_type(ctx);
  const block = {
    c: function create() {
      if_block.c();
      if_block_anchor = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.empty)();
    },
    m: function mount(target, anchor) {
      if_block.m(target, anchor);
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, if_block_anchor, anchor);
    },
    p: function update(ctx, dirty) {
      if (current_block_type === (current_block_type = select_block_type_1(ctx, dirty)) && if_block) {
        if_block.p(ctx, dirty);
      } else {
        if_block.d(1);
        if_block = current_block_type(ctx);

        if (if_block) {
          if_block.c();
          if_block.m(if_block_anchor.parentNode, if_block_anchor);
        }
      }
    },
    d: function destroy(detaching) {
      if_block.d(detaching);
      if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(if_block_anchor);
    }
  };
  (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
    block,
    id: create_if_block_2.name,
    type: "if",
    source: "(36:6) {#if args.value}",
    ctx
  });
  return block;
} // (39:8) {:else}


function create_else_block(ctx) {
  let t0;
  let t1_value =
  /*args*/
  ctx[0].constraint + "";
  let t1;
  let t2;
  const block = {
    c: function create() {
      t0 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.text)("String is invalid, should match `");
      t1 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.text)(t1_value);
      t2 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.text)("`.");
    },
    m: function mount(target, anchor) {
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, t0, anchor);
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, t1, anchor);
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, t2, anchor);
    },
    p: function update(ctx, dirty) {
      if (dirty &
      /*args*/
      1 && t1_value !== (t1_value =
      /*args*/
      ctx[0].constraint + "")) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.set_data_dev)(t1, t1_value);
    },
    d: function destroy(detaching) {
      if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(t0);
      if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(t1);
      if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(t2);
    }
  };
  (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
    block,
    id: create_else_block.name,
    type: "else",
    source: "(39:8) {:else}",
    ctx
  });
  return block;
} // (37:8) {#if args.feedback}


function create_if_block_3(ctx) {
  let t_value =
  /*args*/
  ctx[0].feedback + "";
  let t;
  const block = {
    c: function create() {
      t = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.text)(t_value);
    },
    m: function mount(target, anchor) {
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, t, anchor);
    },
    p: function update(ctx, dirty) {
      if (dirty &
      /*args*/
      1 && t_value !== (t_value =
      /*args*/
      ctx[0].feedback + "")) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.set_data_dev)(t, t_value);
    },
    d: function destroy(detaching) {
      if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(t);
    }
  };
  (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
    block,
    id: create_if_block_3.name,
    type: "if",
    source: "(37:8) {#if args.feedback}",
    ctx
  });
  return block;
} // (46:4) {#if args.examples && Object.keys(args.examples).length > 0}


function create_if_block(ctx) {
  let div1;
  let span;
  let t0;
  let show_if = Object.keys(
  /*args*/
  ctx[0].examples).length > 1;
  let t1;
  let t2;
  let div0;
  let if_block = show_if && create_if_block_1(ctx);
  let each_value = Object.keys(
  /*args*/
  ctx[0].examples);
  (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.validate_each_argument)(each_value);
  let each_blocks = [];

  for (let i = 0; i < each_value.length; i += 1) {
    each_blocks[i] = create_each_block(get_each_context(ctx, each_value, i));
  }

  const block = {
    c: function create() {
      div1 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.element)("div");
      span = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.element)("span");
      t0 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.text)("Try example");
      if (if_block) if_block.c();
      t1 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.text)(":");
      t2 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.space)();
      div0 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.element)("div");

      for (let i = 0; i < each_blocks.length; i += 1) {
        each_blocks[i].c();
      }

      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(span, "class", "d-table-cell mr-1 my-1 p-1 text-right");
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.set_style)(span, "white-space", "nowrap");
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.add_location)(span, file, 47, 8, 1297);
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(div0, "class", "d-table-cell table-grow d-flex flex-wrap justify-content-start align-items-center");
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.add_location)(div0, file, 50, 8, 1474);
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(div1, "class", "d-table-row");
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.add_location)(div1, file, 46, 6, 1263);
    },
    m: function mount(target, anchor) {
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, div1, anchor);
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(div1, span);
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(span, t0);
      if (if_block) if_block.m(span, null);
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(span, t1);
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(div1, t2);
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(div1, div0);

      for (let i = 0; i < each_blocks.length; i += 1) {
        each_blocks[i].m(div0, null);
      }
    },
    p: function update(ctx, dirty) {
      if (dirty &
      /*args*/
      1) show_if = Object.keys(
      /*args*/
      ctx[0].examples).length > 1;

      if (show_if) {
        if (if_block) {} else {
          if_block = create_if_block_1(ctx);
          if_block.c();
          if_block.m(span, t1);
        }
      } else if (if_block) {
        if_block.d(1);
        if_block = null;
      }

      if (dirty &
      /*args, Object, Array*/
      1) {
        each_value = Object.keys(
        /*args*/
        ctx[0].examples);
        (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.validate_each_argument)(each_value);
        let i;

        for (i = 0; i < each_value.length; i += 1) {
          const child_ctx = get_each_context(ctx, each_value, i);

          if (each_blocks[i]) {
            each_blocks[i].p(child_ctx, dirty);
          } else {
            each_blocks[i] = create_each_block(child_ctx);
            each_blocks[i].c();
            each_blocks[i].m(div0, null);
          }
        }

        for (; i < each_blocks.length; i += 1) {
          each_blocks[i].d(1);
        }

        each_blocks.length = each_value.length;
      }
    },
    d: function destroy(detaching) {
      if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(div1);
      if (if_block) if_block.d();
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.destroy_each)(each_blocks, detaching);
    }
  };
  (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
    block,
    id: create_if_block.name,
    type: "if",
    source: "(46:4) {#if args.examples && Object.keys(args.examples).length > 0}",
    ctx
  });
  return block;
} // (49:21) {#if Object.keys(args.examples).length > 1}


function create_if_block_1(ctx) {
  let t;
  const block = {
    c: function create() {
      t = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.text)("s");
    },
    m: function mount(target, anchor) {
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, t, anchor);
    },
    d: function destroy(detaching) {
      if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(t);
    }
  };
  (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
    block,
    id: create_if_block_1.name,
    type: "if",
    source: "(49:21) {#if Object.keys(args.examples).length > 1}",
    ctx
  });
  return block;
} // (52:10) {#each Object.keys(args.examples) as example_name}


function create_each_block(ctx) {
  let span;
  let button;
  let t0_value = (Array.isArray(
  /*args*/
  ctx[0].examples) ?
  /*args*/
  ctx[0].examples[
  /*example_name*/
  ctx[5]] :
  /*example_name*/
  ctx[5]) + "";
  let t0;
  let t1;
  let mounted;
  let dispose;

  function click_handler() {
    return (
      /*click_handler*/
      ctx[4](
      /*example_name*/
      ctx[5])
    );
  }

  const block = {
    c: function create() {
      span = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.element)("span");
      button = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.element)("button");
      t0 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.text)(t0_value);
      t1 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.space)();
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(button, "type", "button");
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(button, "class", "text-btn");
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.add_location)(button, file, 53, 14, 1717);
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(span, "class", "text-sm m-1 p-1");
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.set_style)(span, "white-space", "nowrap");
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.add_location)(span, file, 52, 12, 1643);
    },
    m: function mount(target, anchor) {
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, span, anchor);
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(span, button);
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(button, t0);
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(span, t1);

      if (!mounted) {
        dispose = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.listen_dev)(button, "click", click_handler, false, false, false);
        mounted = true;
      }
    },
    p: function update(new_ctx, dirty) {
      ctx = new_ctx;
      if (dirty &
      /*args*/
      1 && t0_value !== (t0_value = (Array.isArray(
      /*args*/
      ctx[0].examples) ?
      /*args*/
      ctx[0].examples[
      /*example_name*/
      ctx[5]] :
      /*example_name*/
      ctx[5]) + "")) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.set_data_dev)(t0, t0_value);
    },
    d: function destroy(detaching) {
      if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(span);
      mounted = false;
      dispose();
    }
  };
  (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
    block,
    id: create_each_block.name,
    type: "each",
    source: "(52:10) {#each Object.keys(args.examples) as example_name}",
    ctx
  });
  return block;
}

function create_fragment(ctx) {
  let div3;
  let div0;
  let t0_value =
  /*args*/
  ctx[0].label + "";
  let t0;
  let t1;
  let t2;
  let div2;
  let input;
  let input_name_value;
  let input_placeholder_value;
  let t3;
  let div1;
  let t4;
  let show_if =
  /*args*/
  ctx[0].examples && Object.keys(
  /*args*/
  ctx[0].examples).length > 0;
  let mounted;
  let dispose;
  let if_block0 =
  /*args*/
  ctx[0].description && create_if_block_4(ctx);

  function select_block_type(ctx, dirty) {
    if (
    /*args*/
    ctx[0].value) return create_if_block_2;
    return create_else_block_1;
  }

  let current_block_type = select_block_type(ctx, -1);
  let if_block1 = current_block_type(ctx);
  let if_block2 = show_if && create_if_block(ctx);
  const block = {
    c: function create() {
      div3 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.element)("div");
      div0 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.element)("div");
      t0 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.text)(t0_value);
      if (if_block0) if_block0.c();
      t1 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.text)(":");
      t2 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.space)();
      div2 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.element)("div");
      input = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.element)("input");
      t3 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.space)();
      div1 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.element)("div");
      if_block1.c();
      t4 = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.space)();
      if (if_block2) if_block2.c();
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(div0, "class", "col-lg-3 bold text-lg-right my-auto");
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.add_location)(div0, file, 21, 2, 427);
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(input, "type", "text");
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(input, "name", input_name_value =
      /*args*/
      ctx[0].name);
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(input, "class", "form-control nodecoration tiny bg-white px-2 py-1 mb-0");
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(input, "placeholder", input_placeholder_value =
      /*args*/
      ctx[0].hint);
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.toggle_class)(input, "is-valid",
      /*valid*/
      ctx[1]);
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.toggle_class)(input, "is-invalid", !
      /*valid*/
      ctx[1]);
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.add_location)(input, file, 25, 4, 669);
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(div1, "class", "invalid-feedback");
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.add_location)(div1, file, 34, 4, 918);
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(div2, "class", "col-lg-6 pt-2 pt-lg-0");
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.add_location)(div2, file, 24, 2, 629);
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(div3, "class", "row px-4 px-lg-3 pb-4");
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.add_location)(div3, file, 20, 0, 389);
    },
    l: function claim(nodes) {
      throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
    },
    m: function mount(target, anchor) {
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.insert_dev)(target, div3, anchor);
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(div3, div0);
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(div0, t0);
      if (if_block0) if_block0.m(div0, null);
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(div0, t1);
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(div3, t2);
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(div3, div2);
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(div2, input);
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.set_input_value)(input,
      /*args*/
      ctx[0].value);
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(div2, t3);
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(div2, div1);
      if_block1.m(div1, null);
      (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.append_dev)(div2, t4);
      if (if_block2) if_block2.m(div2, null);

      if (!mounted) {
        dispose = (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.listen_dev)(input, "input",
        /*input_input_handler*/
        ctx[3]);
        mounted = true;
      }
    },
    p: function update(ctx, [dirty]) {
      if (dirty &
      /*args*/
      1 && t0_value !== (t0_value =
      /*args*/
      ctx[0].label + "")) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.set_data_dev)(t0, t0_value);

      if (
      /*args*/
      ctx[0].description) {
        if (if_block0) {
          if_block0.p(ctx, dirty);
        } else {
          if_block0 = create_if_block_4(ctx);
          if_block0.c();
          if_block0.m(div0, t1);
        }
      } else if (if_block0) {
        if_block0.d(1);
        if_block0 = null;
      }

      if (dirty &
      /*args*/
      1 && input_name_value !== (input_name_value =
      /*args*/
      ctx[0].name)) {
        (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(input, "name", input_name_value);
      }

      if (dirty &
      /*args*/
      1 && input_placeholder_value !== (input_placeholder_value =
      /*args*/
      ctx[0].hint)) {
        (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.attr_dev)(input, "placeholder", input_placeholder_value);
      }

      if (dirty &
      /*args*/
      1 && input.value !==
      /*args*/
      ctx[0].value) {
        (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.set_input_value)(input,
        /*args*/
        ctx[0].value);
      }

      if (dirty &
      /*valid*/
      2) {
        (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.toggle_class)(input, "is-valid",
        /*valid*/
        ctx[1]);
      }

      if (dirty &
      /*valid*/
      2) {
        (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.toggle_class)(input, "is-invalid", !
        /*valid*/
        ctx[1]);
      }

      if (current_block_type === (current_block_type = select_block_type(ctx, dirty)) && if_block1) {
        if_block1.p(ctx, dirty);
      } else {
        if_block1.d(1);
        if_block1 = current_block_type(ctx);

        if (if_block1) {
          if_block1.c();
          if_block1.m(div1, null);
        }
      }

      if (dirty &
      /*args*/
      1) show_if =
      /*args*/
      ctx[0].examples && Object.keys(
      /*args*/
      ctx[0].examples).length > 0;

      if (show_if) {
        if (if_block2) {
          if_block2.p(ctx, dirty);
        } else {
          if_block2 = create_if_block(ctx);
          if_block2.c();
          if_block2.m(div2, null);
        }
      } else if (if_block2) {
        if_block2.d(1);
        if_block2 = null;
      }
    },
    i: svelte_internal__WEBPACK_IMPORTED_MODULE_0__.noop,
    o: svelte_internal__WEBPACK_IMPORTED_MODULE_0__.noop,
    d: function destroy(detaching) {
      if (detaching) (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.detach_dev)(div3);
      if (if_block0) if_block0.d();
      if_block1.d();
      if (if_block2) if_block2.d();
      mounted = false;
      dispose();
    }
  };
  (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterBlock", {
    block,
    id: create_fragment.name,
    type: "component",
    source: "",
    ctx
  });
  return block;
}

function instance($$self, $$props, $$invalidate) {
  let {
    $$slots: slots = {},
    $$scope
  } = $$props;
  (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.validate_slots)('StringField', slots, []);
  let {
    args = {}
  } = $$props;
  let constraint;
  let valid = true;
  const writable_props = ['args'];
  Object_1.keys($$props).forEach(key => {
    if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console.warn(`<StringField> was created with unknown prop '${key}'`);
  });

  function input_input_handler() {
    args.value = this.value;
    $$invalidate(0, args);
  }

  const click_handler = example_name => $$invalidate(0, args.value = args.examples[example_name], args);

  $$self.$$set = $$props => {
    if ('args' in $$props) $$invalidate(0, args = $$props.args);
  };

  $$self.$capture_state = () => ({
    re_full: _utils_re_full__WEBPACK_IMPORTED_MODULE_1__["default"],
    args,
    constraint,
    valid
  });

  $$self.$inject_state = $$props => {
    if ('args' in $$props) $$invalidate(0, args = $$props.args);
    if ('constraint' in $$props) $$invalidate(2, constraint = $$props.constraint);
    if ('valid' in $$props) $$invalidate(1, valid = $$props.valid);
  };

  if ($$props && "$$inject" in $$props) {
    $$self.$inject_state($$props.$$inject);
  }

  $$self.$$.update = () => {
    if ($$self.$$.dirty &
    /*args*/
    1) {
      $: if (args.value === undefined) {
        $$invalidate(0, args.value = args.default, args);
      }
    }

    if ($$self.$$.dirty &
    /*args*/
    1) {
      $: if (args !== undefined) {
        $$invalidate(2, constraint = (0,_utils_re_full__WEBPACK_IMPORTED_MODULE_1__["default"])(args.constraint));
      }
    }

    if ($$self.$$.dirty &
    /*args, constraint*/
    5) {
      $: if (args.value !== undefined && constraint !== undefined) {
        $$invalidate(1, valid = constraint.exec(args.value) !== null);
      }
    }
  };

  return [args, valid, constraint, input_input_handler, click_handler];
}

class StringField extends svelte_internal__WEBPACK_IMPORTED_MODULE_0__.SvelteComponentDev {
  constructor(options) {
    super(options);
    (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.init)(this, options, instance, create_fragment, svelte_internal__WEBPACK_IMPORTED_MODULE_0__.safe_not_equal, {
      args: 0
    });
    (0,svelte_internal__WEBPACK_IMPORTED_MODULE_0__.dispatch_dev)("SvelteRegisterComponent", {
      component: this,
      tagName: "StringField",
      options,
      id: create_fragment.name
    });
  }

  get args() {
    throw new Error("<StringField>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }

  set args(value) {
    throw new Error("<StringField>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }

}




if (module && module.hot) {}

/* harmony default export */ __webpack_exports__["default"] = (StringField);

/***/ }),

/***/ "./utils/re_full.js":
/*!**************************!*\
  !*** ./utils/re_full.js ***!
  \**************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": function() { return /* binding */ re_full; }
/* harmony export */ });
function re_full(expr, flags) {
  if (/^\^/.exec(expr) === null) expr = `^${expr}`;
  if (/\$$/.exec(expr) === null) expr = `${expr}$`;
  return new RegExp(expr, flags);
}

/***/ })

}]);
//# sourceMappingURL=components_fields_StringField_svelte.js.map